DECLARE last_process_time TIMESTAMP;
DECLARE new_process_time TIMESTAMP;

BEGIN TRANSACTION;
SET last_process_time = (SELECT MAX(process_time) FROM `${report_watermark_table}`);
SET new_process_time = CURRENT_TIMESTAMP();

-- Main MERGE statement to update or insert incidents based on new reports
MERGE `${incidents_table}` AS target
USING (
  -- Latest report for each bus stop
  WITH latest_reports AS (
    SELECT
      *,
      -- Assign row numbers to reports for each bus stop, ordered by update time descending
      ROW_NUMBER() OVER (PARTITION BY bus_stop_id ORDER BY image_created DESC) AS report_number
    FROM `${reports_table}`
    WHERE image_created > last_process_time
  )
  -- Main subquery to prepare data for MERGE operation
  SELECT
    lr.bus_stop_id,
    -- Determine if an incident should be resolved based on cleanliness threshold
    CASE
      WHEN lr.cleanliness_level >= 2 THEN TRUE
      ELSE FALSE
    END AS should_resolve,
    i.incident_id,
    lr.report_id,
    i.open_report_id
  FROM latest_reports lr
  -- Left join to find existing open incidents for each bus stop
  LEFT JOIN `${incidents_table}` i
    ON lr.bus_stop_id = i.bus_stop_id
    AND i.status = "OPEN"
  -- Only consider the most recent report for each bus stop
  WHERE lr.report_number = 1
) AS source
ON target.incident_id = source.incident_id

-- Update existing incidents: mark as resolved if cleanliness has improved
WHEN MATCHED AND source.should_resolve THEN
  UPDATE SET
    status = "RESOLVED",
    resolve_report_id = source.report_id

-- Insert new incidents: create for stops with low cleanliness and no open incident
WHEN NOT MATCHED AND NOT source.should_resolve THEN
  INSERT (incident_id, bus_stop_id, status, open_report_id)
  VALUES (GENERATE_UUID(), source.bus_stop_id, "OPEN", source.report_id)

-- Update existing incidents: set open_report_id if it's missing
WHEN MATCHED AND NOT source.should_resolve AND target.open_report_id IS NULL THEN
  UPDATE SET
    open_report_id = source.report_id;

-- Update the watermark
UPDATE `${report_watermark_table}`
SET process_time = new_process_time
WHERE TRUE;

COMMIT TRANSACTION;